!function(){"use strict";var e={999:function(e,t,r){e.exports=r.p+"226461bd64622361ffb2.svg"},108:function(e,t,r){e.exports=r.p+"09d0b6b84dec2c3ab953.svg"}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,r),i.exports}function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,i(n.key),n)}}function i(e){var t=function(e){if("object"!=n(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=n(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==n(t)?t:t+""}r.m=e,r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r.b=document.baseURI||self.location.href;var a=function(){return e=function e(t,r){var n=t.data,o=t.user,i=t.handleCardClick,a=t.handleDeleteClick,u=t.handleLikeClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._title=n.name,this._imageUrl=n.link,this._likes=n.likes,this._id=n._id,this._createdAt=n.createdAt,this._owner=n.owner,this._cardSelector=r,this._handleCardClick=i,this._handleDeleteClick=a,this._handleLikeClick=u,this._user=o},(t=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".gallery__card").cloneNode(!0)}},{key:"generateCard",value:function(){return this._card=this._getTemplate(),this._user.id!==this._owner._id&&this._card.querySelector(".gallery__trash").remove(),this._setEventListeners(),this._card.querySelector(".gallery__photo").src=this._imageUrl,this._card.querySelector(".gallery__photo").alt="Imagem ".concat(this._title),this._card.querySelector(".gallery__title").textContent=this._title,this._card.querySelector(".gallery__like-count").textContent=this._likes.length,this._setLikeIcon(),this._card}},{key:"_setLikeIcon",value:function(){var e=this._card.querySelector(".gallery__like-btn"),t=new URL(r(108),r.b),n=new URL(r(999),r.b);this.isUserLiked()?(e.src=n,e.classList.add("gallery__like-btn_active")):(e.src=t,e.classList.remove("gallery__like-btn_active"))}},{key:"isUserLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._user.id}))}},{key:"like",value:function(e){this._card.querySelector(".gallery__like-count").textContent=e.length,this._likes=e,this._setLikeIcon()}},{key:"_setEventListeners",value:function(){var e=this;this._card.querySelector(".gallery__trash")&&this._card.querySelector(".gallery__trash").addEventListener("click",(function(t){e._handleDeleteClick(e._id)})),this._card.querySelector(".gallery__like-btn").addEventListener("click",(function(t){e._handleLikeClick(e._id)})),this._card.querySelector(".gallery__photo").addEventListener("click",(function(t){e._handleCardClick(e)}))}}])&&o(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,l(n.key),n)}}function l(e){var t=function(e){if("object"!=u(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=u(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==u(t)?t:t+""}var s=function(){return e=function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._configObj=t,this._form=r},(t=[{key:"_showInputError",value:function(e,t){var r=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._configObj.inputErrorClass),r.textContent=t,r.classList.add(this._configObj.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._configObj.inputErrorClass),t.classList.remove(this._configObj.errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?(t.classList.add(this._configObj.inactiveButtonClass),t.setAttribute("disabled",!0)):(t.classList.remove(this._configObj.inactiveButtonClass),t.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._form.querySelectorAll(this._configObj.inputSelector)),r=this._form.querySelector(this._configObj.submitButtonSelector);this._toggleButtonState(t,r),t.forEach((function(n){n.addEventListener("input",(function(){e._toggleButtonState(t,r),e._checkInputValidity(n)}))})),this._form.addEventListener("reset",(function(){t.forEach((function(t){e._hideInputError(t),r.classList.add(e._configObj.inactiveButtonClass),r.setAttribute("disabled",!0)}))})),this._form.addEventListener("submit",(function(e){e.preventDefault()}))}},{key:"enableValidation",value:function(){var e=this;Array.from(this._form.querySelectorAll(this._configObj.fieldsetSelector)).forEach((function(t){e._setEventListeners(t)}))}}])&&c(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function p(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,y(n.key),n)}}function y(e){var t=function(e){if("object"!=f(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=f(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==f(t)?t:t+""}var d=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t)},(t=[{key:"open",value:function(){this._popup.classList.add("popup_is-opened")}},{key:"close",value:function(){this._popup.classList.remove("popup_is-opened")}},{key:"_handleEscClose",value:function(e){"Escape"===e&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close").addEventListener("click",(function(){e.close()})),this._popup.addEventListener("click",(function(t){t.target.classList.contains("popup")&&e.close()})),document.addEventListener("keydown",(function(t){e._handleEscClose(t.key)}))}}])&&p(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function m(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,b(n.key),n)}}function b(e){var t=function(e){if("object"!=v(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=v(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==v(t)?t:t+""}function h(e,t,r){return t=k(t),function(e,t){if(t&&("object"==v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,_()?Reflect.construct(t,r||[],k(e).constructor):t.apply(e,r))}function _(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(_=function(){return!!e})()}function g(e,t,r,n){var o=S(k(1&n?e.prototype:e),t,r);return 2&n?function(e){return o.apply(r,e)}:o}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},S.apply(null,arguments)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}function w(e,t){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},w(e,t)}var E=function(e){function t(e,r){var n,o=e.submit,i=e.loadingText;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=h(this,t,[r]))._submit=o,n._form=n._popup.querySelector(".form"),n._loadingText=i,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(t,e),r=t,(n=[{key:"close",value:function(){g(t,"close",this,3)([]),this._form.reset()}},{key:"_getInputValues",value:function(){var e=this,t=Array.from(this._form.elements).filter((function(e){return"INPUT"===e.tagName}));return this._formValues={},t.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;g(t,"setEventListeners",this,3)([]),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._form.elements.submit.textContent=e._loadingText,e._submit(e._getInputValues()),e.close()}))}}])&&m(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n}(d);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function O(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,C(n.key),n)}}function C(e){var t=function(e){if("object"!=j(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=j(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==j(t)?t:t+""}function P(e,t,r){return t=q(t),function(e,t){if(t&&("object"==j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,L()?Reflect.construct(t,r||[],q(e).constructor):t.apply(e,r))}function L(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(L=function(){return!!e})()}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},I.apply(null,arguments)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}function T(e,t){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},T(e,t)}var x=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),P(this,t,arguments)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&T(e,t)}(t,e),r=t,n=[{key:"open",value:function(e){var r,n,o;this._popup.querySelector(".popup__image").src=e.link,this._popup.querySelector(".popup__caption").textContent=e.name,(r=t,n=this,o=I(q(1&3?r.prototype:r),"open",n),function(e){return o.apply(n,e)})([])}}],n&&O(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n}(d);function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function U(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,A(n.key),n)}}function A(e){var t=function(e){if("object"!=R(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==R(t)?t:t+""}var B=function(){return e=function e(t,r){var n=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=n,this._renderer=o,this._container=document.querySelector(r)},(t=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"removeItem",value:function(e){var t=this._renderedItems.reverse().findIndex((function(t){return t._id===e}));this._container.removeChild(this._container.children[t])}},{key:"renderItems",value:function(){var e=this;this._renderedItems.reverse().forEach((function(t){e._renderer(t)}))}}])&&U(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function V(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,N(n.key),n)}}function N(e){var t=function(e){if("object"!=D(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==D(t)?t:t+""}var H=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(t.nameSelector),this._about=document.querySelector(t.aboutSelector),this._avatar=document.querySelector(t.avatarSelector)},(t=[{key:"getUserInfo",value:function(){var e={};return e.name=this._name.textContent.trim(),e.about=this._about.textContent,e.avatar=this._avatar.src,e.id=this._id,e.cohort=this._cohort,e}},{key:"setUserInfo",value:function(e){e.name&&(this._name.textContent=e.name),e.about&&(this._about.textContent=e.about),e.avatar&&(this._avatar.src=e.avatar),e.id&&(this._id=e.id),e.cohort&&(this._cohort=e.cohort)}}])&&V(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function z(e){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},z(e)}function G(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,J(n.key),n)}}function J(e){var t=function(e){if("object"!=z(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=z(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==z(t)?t:t+""}var M,F=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.baseUrl,this._headers=t.headers},t=[{key:"_makeRequest",value:function(e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r={method:arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GET",headers:this._headers};return t&&(r.headers["Content-Type"]="application/json",r.body=JSON.stringify(t)),fetch("".concat(this._url).concat(e),r).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"getUserInfo",value:function(){return this._makeRequest("/users/me")}},{key:"updateUserInfo",value:function(e){return this._makeRequest("/users/me","PATCH",e)}},{key:"getInitialCards",value:function(){return this._makeRequest("/cards")}},{key:"addCard",value:function(e){return this._makeRequest("/cards","POST",e)}},{key:"deleteCard",value:function(e){return this._makeRequest("/cards/".concat(e),"DELETE")}},{key:"likeCard",value:function(e,t){return this._makeRequest("/cards/likes/".concat(e),t)}},{key:"updateProfileAvatar",value:function(e){return this._makeRequest("/users/me/avatar","PATCH",e)}}],t&&G(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),K={formSelector:".form",fieldsetSelector:".form__fieldset",inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active",gallerySelector:".gallery",cardTemplateSelector:"#card-template"},Q=new F({baseUrl:"https://around.nomoreparties.co/v1/web-ptbr-cohort-14",headers:{authorization:"e255bcaf-9aa3-4e45-a23a-da684d7fa67f"}}),W=new H({nameSelector:".profile__name",aboutSelector:".profile__about",avatarSelector:".profile__photo"});function X(e){var t=new a({data:e,user:W.getUserInfo(),handleCardClick:function(){Y.open(e)},handleDeleteClick:function(e){document.forms.confirm.elements.id.value=e,Z.open()},handleLikeClick:function(e){var r=t.isUserLiked()?"DELETE":"PUT";Q.likeCard(e,r).then((function(e){t.like(e.likes)})).catch((function(e){console.log(e)}))}},"#card-template"),r=t.generateCard();return M.addItem(r),t}Q.getUserInfo().then((function(e){W.setUserInfo({name:e.name,about:e.about,avatar:e.avatar,id:e._id,cohort:e.cohort})})).then((function(){Q.getInitialCards().then((function(e){(M=new B({items:e,renderer:function(e){X(e)}},K.gallerySelector)).renderItems()})).catch((function(e){console.log(e)}))})).catch((function(e){console.log(e)})),Array.from(document.querySelectorAll(".form")).filter((function(e){return"confirm"!==e.name})).forEach((function(e){new s(K,e).enableValidation()}));var Y=new x(".popup_image");Y.setEventListeners();var Z=new E({submit:function(e){Q.deleteCard(e.id).then((function(){M.removeItem(e.id)})).catch((function(e){console.log(e)}))},loadingText:"Salvar..."},".popup_form_confirm");Z.setEventListeners();var $=new E({submit:function(e){Q.updateUserInfo(e).then((function(e){W.setUserInfo({name:e.name,about:e.about})})).catch((function(e){return console.log(e)}))},loadingText:"Salvar..."},".popup_form_edit");$.setEventListeners();var ee=new E({submit:function(e){Q.addCard(e).then((function(e){X(e)})).catch((function(e){console.log(e)}))},loadingText:"Crie"},".popup_form_add");ee.setEventListeners();var te=new E({submit:function(e){Q.updateProfileAvatar({avatar:e.link}).then((function(e){W.setUserInfo({avatar:e.avatar})})).catch((function(e){console.log(e)}))},loadingText:"Salvar..."},".popup_form_edit-avatar");te.setEventListeners(),document.querySelector(".profile__edit-btn").addEventListener("click",(function(){var e=W.getUserInfo(),t=document.forms.edit.elements,r=t.name,n=t.about;r.value=e.name,n.value=e.about,$.open()})),document.querySelector(".profile__add-btn").addEventListener("click",(function(){ee.open()})),document.querySelector(".profile__edit-photo").addEventListener("click",(function(){te.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,